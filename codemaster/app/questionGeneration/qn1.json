{
    "type": "Code Understanding",
    "title": "Valid Parentheses Checker",
    "context": "Analyze the provided function designed to check the validity of a string containing just the characters '(', ')', '{', '}', '[' and ']'. Enhance the function to provide more detailed output.",
    "language": "Javascript",
    "code": "function isValid(s) {\n    let stack = [];\n    let mapping = { ')': '(', '}': '{', ']': '[' };\n    for (let char of s) {\n        if (char in mapping) {\n            let topElement = stack.length > 0 ? stack.pop() : '#';\n            if (mapping[char] !== topElement) {\n                return false;\n            }\n        } else {\n            stack.push(char);\n        }\n    }\n    return stack.length === 0;\n}",
    "difficulty": "Easy",
    "source": {
      "link": "https://leetcode.com/problems/valid-parentheses/description/",
      "src": "leetcode"
    },
    "parts": [
      {
        "part": "a",
        "question": "Which of the following best describes the function's method for validating parentheses?",
        "questionType": "MCQ",
        "options": [
          "The function iterates through the string and removes all parentheses to see if any remain.",
          "The function uses a queue to add each character and then dequeues them to check for validity.",
          "The function uses a stack to manage opening brackets and checks matching closing brackets against the top of the stack.",
          "The function recursively replaces adjacent pairs of valid brackets until no more can be replaced."
        ],
        "points": 5,
        "expected": "The function uses a stack to manage opening brackets and checks matching closing brackets against the top of the stack."
      },
      {
        "part": "b",
        "question": "Which of the following data structures cannot replace the dictionary used in the `isValid` function to map closing brackets to their corresponding opening brackets? Select all that apply.",
        "questionType": "MCQ",
        "options": [
            "List of tuples, where each tuple contains a pair of matching opening and closing brackets.",
            "Set of tuples, where each tuple contains a pair of matching opening and closing brackets.",
            "Two arrays, one for opening brackets and one for closing brackets, where indices of matching brackets correspond.",
            "A single array containing only opening brackets, relying on their order to match with closing brackets in the code."
        ],
        "points": 5,
        "expected": [
            "A single array containing only opening brackets, relying on their order to match with closing brackets in the code."
        ]
    }
    ,
      {
        "part": "c",
        "question": "Modify the function to return the position of the first incorrect bracket if the string is invalid or -1 if the string is valid.",
        "questionType": "Freestyle",
        "format": ["string", "expected"],
        "inputs": [
          {
            "Input String": "()[]{}",
            "expected": -1
          },
          {
            "Input String": "(]",
            "expected": 1
          },
          {
            "Input String": "([)]",
            "expected": 2
          },
          {
            "Input String": "{[()]}",
            "expected": -1
          }
        ],
        "points": [2,2,2,2],
        "functionName" : "isValid"
      }
    ]
}
